scalar Time

type Tweet {
  id:ID!
  fullText:String!
  postedAt:Time
  authorID:ID
  author:Author
  captureURL:String
  captureThumbURL:String
  favoriteCount:Int
  lang :String
  retweetCount:Int
  resources:[Resource]
}
type Author {
  id:ID!
  userName:String!
  screenName:String
  bio: String
  profileImageURL:String
}

type Resource {
  id:ID!
  url:String!
  mediaType:String
  width:Int
  height:Int
}

input SearchInput {
  term:String!
}

input ContactInput {
  fullName:String!
  email:String!
  message:String!
}

type Query {
  #  find a tweet
  tweet(id:ID!):Tweet

  #  search
  search(input:SearchInput!, size:Int! = 20, page:Int!=0, start:Int!=0):[Tweet]
}

type Mutation {
  capture(url:String!): Tweet

  contact(input:ContactInput!, tweetID:ID, capthca:String!):String!
}
