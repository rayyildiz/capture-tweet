apiVersion: apps/v1
kind: Deployment
metadata:
  name: capturetweet-ui
spec:
  selector:
    matchLabels:
      app: capturetweet-ui
      version: v1
  replicas: 1
  template:
    metadata:
      labels:
        app: capturetweet-ui
        version: v1
    spec:
      containers:
        - name: ui
          image: rayyildiz/capturetweet-ui
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: capturetweet-ui-svc
spec:
  selector:
    app: capturetweet-ui
    version: v1
  ports:
    - port: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capturetweet-backend
spec:
  selector:
    matchLabels:
      app: capturetweet-backend
      version: v1
  replicas: 2
  template:
    metadata:
      labels:
        app: capturetweet-backend
        version: v1
    spec:
      containers:
        - name: ui
          image: rayyildiz/capturetweet-server
          ports:
            - containerPort: 4000
          envFrom:
            - secretRef:
                name: connection-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: capturetweet-backend-svc
spec:
  selector:
    app: capturetweet-backend
    version: v1
  ports:
    - port: 4000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: capturetweet-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "12h"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
spec:
  rules:
    - host: beta.capturetweet.com
      http:
        paths:
          - path: /api/.*
            backend:
              serviceName: capturetweet-backend-svc
              servicePort: 4000
          - path: /
            backend:
              serviceName: capturetweet-ui-svc
              servicePort: 80
